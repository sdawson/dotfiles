#
# ~/.bashrc
#

: ${UNAME=$(uname)}

# Shortcut to the dotfiles dir
export DOT=$HOME/.dotfiles

# If not running interactively, don't do anything
#[[ $- != *i* ]] && return

# Editor env variables
export EDITOR=vim
export VISUAL=vim
export GIT_EDITOR=vim

export COLUMNS

export TRANSMISSION_HOME=${HOME}/.transmission

# turn off history expansion
set +H

# PATH additions and env vars for Go
export GOROOT=${HOME}/dev/go
export GOARCH=amd64
export GOPATH=${HOME}/dev/gocode
export PATH=${PATH}:${GOPATH}/bin

export HOSTNAME="$(hostname)"
export HOSTNAME_SHORT="${HOSTNAME%%.*}"

# bash history settings
export HISTCONTROL=ignoredups:ignorespace:erasedups # no duped entries
export HISTFILESIZE=100000
export HISTSIZE=${HISTFILESIZE}
export HISTIGNORE=clear:pwd:exit:bg:fg
export HISTFILE="${HOME}/.history/$(date -u +%Y/%m/%d.%H.%M.%S)_${HOSTNAME_SHORT}_$$"
mkdir -p "$(dirname "$HISTFILE")"
export HISTTIMEFORMAT="%Y/%m/%d - %H:%M:%S "
shopt -s histappend # append to history, don't overwrite it
shopt -s cmdhist # try to save all lines of a multiple-line command in the same history entry
shopt -s lithist # save multi-line commands to the history with embedded newlines
# bind '"\C-t": history-search-forward'

# fzf settings
export FZF_DEFAULT_OPTS='--no-height'

# hstr settings
export HH_CONFIG=hicolor         # get more colors
export PROMPT_COMMAND="history -a; history -n; ${PROMPT_COMMAND}"   # mem/file sync
# if this is interactive shell, then bind hh to Ctrl-r (for Vi mode check doc)
if [[ $- =~ .*i.* ]]; then bind '"\C-r": "\C-a hh -- \C-j"'; fi

unamestr=`uname`

if [ "$unamestr" = "Linux" ]; then
  export GOOS=linux
  export TERMINAL=xterm
  alias unison='unison-gtk2'

  PS1='[\u@\h \W$(__git_ps1 " (%s)")]\$ '

  alias ls='ls --color=auto'
  alias sl='ls --color=auto'
  alias ll='ls --color=auto -l'
  alias la='ls --color=auto -al'

  #@$(ruby -rubygems -e "puts Gem.user_dir")/bin

  # Adding arduino to PATH
  export PATH=${PATH}:/usr/share/arduino-1.0

  # Lang (locale info) for anki software
  export LANG=en_AU.UTF-8
elif [ "$unamestr" = "Darwin" ]; then
  export GOOS=darwin

  # Brew path additions
  export PATH=/usr/local/bin:/usr/local/sbin:$PATH

  # ROOT path additions
  export PATH=${PATH}:${HOME}/dev/root/bin
  export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/dev/root/lib

  # Exports for node
  export NODE_PATH="/usr/local/lib/node"

  # path fixes for homebrew git
  export PATH=/usr/local/opt/gettext/bin:${PATH}

  if hash rbenv 2>/dev/null; then
    eval "$(rbenv init -)"
  fi

  if hash foo 2>/dev/null; then
    if [ -f $(brew --prefix)/etc/bash_completion ]; then
      . $(brew --prefix)/etc/bash_completion
    fi
  fi

  if [ -f ~/.git-prompt.sh ]; then
    source ~/.git-prompt.sh
  fi

  GIT_PS1_SHOWDIRTYSTATE=true
  export PS1='[\u@\h \W$(__git_ps1)]\$ '

  alias sl='ls -G'
  alias ll='ls -Gl'
  alias la='ls -Gal'
fi

if [[ -f ${GOROOT}/misc/bash/go ]]
then
  source ${GOROOT}/misc/bash/go
fi

alias givm='gvim'
alias histgrep="${HOME}/.dotfiles/bash/histgrep.bash"
alias fzfhist="${HOME}/.dotfiles/bash/fzfhist.bash"
alias dockerclean="${HOME}/.dotfiles/bash/docker_clean.bash"
alias timehelp="${HOME}/.dotfiles/bash/timestamp_help.bash"
alias gls="${HOME}/bin/gitlogsince.sh"
alias r="$(which R) --no-save"
alias mv='mv -i'
alias gdw="git diff --color-words"

# git shortcuts
alias gitinfo='${HOME}/.dotfiles/git/git-info.txt'
alias gbd='${HOME}/.dotfiles/git/git-branch-dates.txt'
alias gitroot='cd $(git rev-parse --show-toplevel) && echo "$_"'
# alias gl="git log --graph --oneline --decorate --date=short --all --pretty=format:'%ad %h %Cgreen%an %C(auto)%d %Creset%s'"

# Load all completion files
for config_file in `ls $DOT/**/completion/*`
do
  source "$config_file"
done

export NVM_DIR="${HOME}/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# __fzf_history__() {
#   # sift --no-color -e "^[^#]" --files "_${HOSTNAME_SHORT}_" -N --no-filename $HOME/Sync/Dotfiles/history | sort | uniq -c | sort | $(__fzfcmd) +s --tac +m -n1..,.. --tiebreak=index --toggle-sort=ctrl-r | sed "s/ [0-9] *//"
#   # $(__fzfcmd) +s --tac +m -n1..,.. --tiebreak=index --toggle-sort=ctrl-r | sed "s/ [0-9] *//"
#   # Note: unlike the sift version above, this ag version doesn't allow for the 
#   # addition of an additional pattern to the current pattern, which means that
#   # you're not filtering out commented (# asdlfkj?) entries in the history 
#   # files.
#   ag --nocolor -G "_${HOSTNAME_SHORT}_" --nonumbers --nofilename --nobreak $HOME/.history | sort | uniq -c | sort | fzf +s --tac +m -n1..,.. --tiebreak=index --toggle-sort=ctrl-r
# }

# usage:
# if command_exists mvim; then
#   export BLAH="mvim --no-fork"
# fi
command_exists () {
  command -v "$1" > /dev/null 2>&1;
}

# Load secret non-versioned stuff
if [[ -f ~/.localrc ]]
then
  source ~/.localrc
fi
